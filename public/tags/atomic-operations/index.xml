<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Atomic-Operations on My Programming Journey Blog</title>
    <link>http://localhost:1313/my-programming-journey/tags/atomic-operations/</link>
    <description>Recent content in Atomic-Operations on My Programming Journey Blog</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Sep 2025 13:35:54 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/my-programming-journey/tags/atomic-operations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 2: From In-Memory to File Storage - Persistence Without Database Overhead ðŸ’¾</title>
      <link>http://localhost:1313/my-programming-journey/posts/chapter-2-file-storage/</link>
      <pubDate>Fri, 19 Sep 2025 13:35:54 +0200</pubDate>
      <guid>http://localhost:1313/my-programming-journey/posts/chapter-2-file-storage/</guid>
      <description>&lt;p&gt;Keeping the momentum going! Yesterday, I split my tiny Go Todo app into a layered structure. Today I added a fileâ€‘based storage adapter so todos survive restartsâ€”without jumping to a full database (yet).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repo/branch&lt;/strong&gt;: &lt;a href=&#34;https://github.com/macesz/go-todo-chi/tree/file-storage&#34;&gt;https://github.com/macesz/go-todo-chi/tree/file-storage&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;why-start-in-memory-&#34;&gt;Why Start In-Memory? ðŸ§ &lt;/h2&gt;
&lt;p&gt;Starting with in-memory storage wasn&amp;rsquo;t just about being lazyâ€”it was strategic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fast feedback&lt;/strong&gt;: No I/O, fewer moving parts to debug&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Focus on the domain&lt;/strong&gt;: Behavior first, storage later&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simple wiring&lt;/strong&gt;: Great for sketching out architecture patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But of course, it came with trade-offs:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
